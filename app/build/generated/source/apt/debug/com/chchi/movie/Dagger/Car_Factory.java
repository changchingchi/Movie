// Generated by Dagger (https://google.github.io/dagger).
package com.chchi.movie.Dagger;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class Car_Factory implements Factory<Car> {
  private final Provider<Engine> engineProvider;

  private final Provider<Wheels> wheelsProvider;

  public Car_Factory(Provider<Engine> engineProvider, Provider<Wheels> wheelsProvider) {
    this.engineProvider = engineProvider;
    this.wheelsProvider = wheelsProvider;
  }

  @Override
  public Car get() {
    return new Car(engineProvider.get(), wheelsProvider.get());
  }

  public static Car_Factory create(
      Provider<Engine> engineProvider, Provider<Wheels> wheelsProvider) {
    return new Car_Factory(engineProvider, wheelsProvider);
  }
}
